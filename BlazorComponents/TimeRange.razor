<div class="toolbar-group">
    <label>Time</label>
    <select class="form-control" value="@Hours" onchange="@ChangeHours" disabled="@IsDisabled">
        <optgroup label="Recent Hours">
            <option value="4">Recent 4 Hours</option>
            <option value="8">Recent 8 Hours</option>
            <option value="12">Recent 12 Hours</option>
        </optgroup>
        <optgroup label="Recent Days">
            <option value="24">Recent Day</option>
            <option value="168">Recent Week</option>
        </optgroup>
        <optgroup label="Others">
            <option value="0">Custom Time Range</option>
        </optgroup>
    </select>
</div>
@if (Hours == 0)
{
    <div class="toolbar-group">
        <label>Start Date</label>
        <input class="form-control" type="date" value="@Start.ToString("yyyy-MM-dd")" onchange="@ChangeStart" disabled="@IsDisabled" />
    </div>
    <div class="toolbar-group">
        <label>End Date</label>
        <input class="form-control" type="date" value="@End.ToString("yyyy-MM-dd")" onchange="@ChangeEnd" disabled="@IsDisabled" />
    </div>
}

@functions {
    [Parameter] bool IsDisabled { get; set; }
    [Parameter] int Hours { get; set; }
    [Parameter] DateTime Start { get; set; }
    [Parameter] DateTime End { get; set; }
    [Parameter] EventCallback<int> OnChangeHours { get; set; }
    [Parameter] EventCallback<DateTime> OnChangeStart { get; set; }
    [Parameter] EventCallback<DateTime> OnChangeEnd { get; set; }

    private Task ChangeHours(UIChangeEventArgs e) => OnChangeHours.InvokeAsync(int.Parse((string)e.Value));

    private Task ChangeStart(UIChangeEventArgs e) => OnChangeStart.InvokeAsync(DateTime.Parse((string)e.Value).StartOfDay());

    private Task ChangeEnd(UIChangeEventArgs e) => OnChangeEnd.InvokeAsync(DateTime.Parse((string)e.Value).EndOfDay());
}