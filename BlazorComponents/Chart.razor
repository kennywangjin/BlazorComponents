@using Microsoft.JSInterop
@inject IJSRuntime JSRuntime
@inject IComponentContext ComponentContext
@implements IDisposable

<div ref="@_container" style="width:@Width;height:@Height"></div>

@functions {
    ElementRef _container;

    [Parameter] bool IsLoading { get; set; } = false;
    [Parameter] object Options { get; set; }
    [Parameter] string Width { get; set; } = "100%";
    [Parameter] string Height { get; set; } = "600px";

    protected async override Task OnAfterRenderAsync()
    {
        if (ComponentContext.IsConnected)
        {
            if (IsLoading)
            {
                await JSRuntime.InvokeAsync<object>("__app.chart.showLoading", _container);
            }
            else
            {
                await JSRuntime.InvokeAsync<object>("__app.chart.render", _container, Options);
            }
        }
    }

    public void Dispose()
    {
        if (ComponentContext.IsConnected)
        {
            JSRuntime.InvokeAsync<object>("__app.chart.destroy", _container).ConfigureAwait(false);
        }
    }
}